INFO  21:51:02,070 - Compiling source file: C:\Users\Nikola\Documents\ETF_NIKOLA\IV\sedmi semestar\prevodioci\domaci leksicka analiza\workspace\MJCompiler\test\program.mj
INFO  21:51:02,077 - #1 program
INFO  21:51:02,077 - #17 TestProgram
INFO  21:51:02,077 - #45 {
INFO  21:51:02,077 - #11 void
INFO  21:51:02,077 - #17 main
INFO  21:51:02,077 - #41 (
INFO  21:51:02,077 - #42 )
INFO  21:51:02,078 - #45 {
INFO  21:51:02,078 - #17 Declare
INFO  21:51:02,078 - #17 variables
INFO  21:51:02,078 - #17 int
INFO  21:51:02,078 - #34 =
INFO  21:51:02,078 - #18 10
INFO  21:51:02,078 - #37 ;
INFO  21:51:02,078 - #17 int
INFO  21:51:02,078 - #34 =
INFO  21:51:02,078 - #18 20
INFO  21:51:02,078 - #37 ;
INFO  21:51:02,078 - #17 int
INFO  21:51:02,079 - #37 ;
INFO  21:51:02,079 - #17 bool
INFO  21:51:02,079 - #17 flag
INFO  21:51:02,079 - #34 =
INFO  21:51:02,079 - #20 true
INFO  21:51:02,079 - #37 ;
INFO  21:51:02,079 - #17 Print
INFO  21:51:02,079 - #17 initial
INFO  21:51:02,079 - #17 values
INFO  21:51:02,079 - #8 print
INFO  21:51:02,079 - #41 (
INFO  21:51:02,079 - #42 )
INFO  21:51:02,079 - #37 ;
INFO  21:51:02,080 - #8 print
INFO  21:51:02,080 - #41 (
INFO  21:51:02,080 - #42 )
INFO  21:51:02,080 - #37 ;
INFO  21:51:02,080 - #8 print
INFO  21:51:02,080 - #41 (
INFO  21:51:02,080 - #17 flag
INFO  21:51:02,080 - #42 )
INFO  21:51:02,080 - #37 ;
INFO  21:51:02,080 - #17 Arithmetic
INFO  21:51:02,080 - #17 operations
INFO  21:51:02,080 - #34 =
INFO  21:51:02,080 - #21 +
INFO  21:51:02,081 - #37 ;
INFO  21:51:02,081 - #17 addition
INFO  21:51:02,081 - #34 =
INFO  21:51:02,081 - #22 -
INFO  21:51:02,081 - #37 ;
INFO  21:51:02,081 - #17 subtraction
INFO  21:51:02,081 - #34 =
INFO  21:51:02,081 - #23 *
INFO  21:51:02,081 - #37 ;
INFO  21:51:02,081 - #17 multiplication
INFO  21:51:02,081 - #34 =
INFO  21:51:02,081 - #24 /
INFO  21:51:02,081 - #37 ;
INFO  21:51:02,081 - #17 division
INFO  21:51:02,081 - #34 =
INFO  21:51:02,081 - #25 %
INFO  21:51:02,081 - #37 ;
INFO  21:51:02,082 - #17 modulus
INFO  21:51:02,082 - #17 Increment
INFO  21:51:02,082 - #17 and
INFO  21:51:02,082 - #17 decrement
INFO  21:51:02,082 - #35 ++
INFO  21:51:02,082 - #37 ;
INFO  21:51:02,082 - #36 --
INFO  21:51:02,082 - #37 ;
INFO  21:51:02,082 - #17 Comparison
INFO  21:51:02,082 - #17 operators
INFO  21:51:02,082 - #6 if
INFO  21:51:02,082 - #41 (
INFO  21:51:02,082 - #26 ==
INFO  21:51:02,082 - #42 )
INFO  21:51:02,082 - #45 {
INFO  21:51:02,082 - #8 print
INFO  21:51:02,082 - #41 (
INFO  21:51:02,082 - #17 is
INFO  21:51:02,083 - #17 equal
INFO  21:51:02,083 - #17 to
INFO  21:51:02,083 - #42 )
INFO  21:51:02,083 - #37 ;
INFO  21:51:02,083 - #46 }
INFO  21:51:02,083 - #4 else
INFO  21:51:02,083 - #6 if
INFO  21:51:02,083 - #41 (
INFO  21:51:02,083 - #27 !=
INFO  21:51:02,083 - #42 )
INFO  21:51:02,083 - #45 {
INFO  21:51:02,083 - #8 print
INFO  21:51:02,083 - #41 (
INFO  21:51:02,083 - #17 is
INFO  21:51:02,083 - #17 not
INFO  21:51:02,083 - #17 equal
INFO  21:51:02,083 - #17 to
INFO  21:51:02,083 - #42 )
INFO  21:51:02,084 - #37 ;
INFO  21:51:02,084 - #46 }
INFO  21:51:02,084 - #6 if
INFO  21:51:02,084 - #41 (
INFO  21:51:02,084 - #28 >
INFO  21:51:02,084 - #42 )
INFO  21:51:02,084 - #45 {
INFO  21:51:02,084 - #8 print
INFO  21:51:02,084 - #41 (
INFO  21:51:02,084 - #17 is
INFO  21:51:02,084 - #17 greater
INFO  21:51:02,084 - #17 than
INFO  21:51:02,084 - #42 )
INFO  21:51:02,084 - #37 ;
INFO  21:51:02,085 - #46 }
INFO  21:51:02,085 - #4 else
INFO  21:51:02,085 - #6 if
INFO  21:51:02,085 - #41 (
INFO  21:51:02,085 - #29 >=
INFO  21:51:02,085 - #42 )
INFO  21:51:02,085 - #45 {
INFO  21:51:02,085 - #8 print
INFO  21:51:02,085 - #41 (
INFO  21:51:02,085 - #17 is
INFO  21:51:02,085 - #17 greater
INFO  21:51:02,085 - #17 than
INFO  21:51:02,085 - #17 or
INFO  21:51:02,085 - #17 equal
INFO  21:51:02,085 - #17 to
INFO  21:51:02,085 - #42 )
INFO  21:51:02,085 - #37 ;
INFO  21:51:02,085 - #46 }
INFO  21:51:02,086 - #4 else
INFO  21:51:02,086 - #6 if
INFO  21:51:02,086 - #41 (
INFO  21:51:02,086 - #30 <
INFO  21:51:02,086 - #42 )
INFO  21:51:02,086 - #45 {
INFO  21:51:02,086 - #8 print
INFO  21:51:02,086 - #41 (
INFO  21:51:02,086 - #17 is
INFO  21:51:02,086 - #17 less
INFO  21:51:02,086 - #17 than
INFO  21:51:02,086 - #42 )
INFO  21:51:02,086 - #37 ;
INFO  21:51:02,086 - #46 }
INFO  21:51:02,086 - #4 else
INFO  21:51:02,086 - #6 if
INFO  21:51:02,086 - #41 (
INFO  21:51:02,086 - #31 <=
INFO  21:51:02,086 - #42 )
INFO  21:51:02,086 - #45 {
INFO  21:51:02,086 - #8 print
INFO  21:51:02,087 - #41 (
INFO  21:51:02,087 - #17 is
INFO  21:51:02,087 - #17 less
INFO  21:51:02,087 - #17 than
INFO  21:51:02,087 - #17 or
INFO  21:51:02,087 - #17 equal
INFO  21:51:02,087 - #17 to
INFO  21:51:02,087 - #42 )
INFO  21:51:02,087 - #37 ;
INFO  21:51:02,087 - #46 }
INFO  21:51:02,087 - #17 Logical
INFO  21:51:02,087 - #17 operators
INFO  21:51:02,087 - #6 if
INFO  21:51:02,087 - #41 (
INFO  21:51:02,087 - #17 flag
INFO  21:51:02,087 - #32 &&
INFO  21:51:02,087 - #41 (
INFO  21:51:02,087 - #30 <
INFO  21:51:02,087 - #33 ||
INFO  21:51:02,087 - #28 >
INFO  21:51:02,087 - #42 )
INFO  21:51:02,087 - #42 )
INFO  21:51:02,087 - #45 {
INFO  21:51:02,088 - #8 print
INFO  21:51:02,088 - #41 (
INFO  21:51:02,088 - #17 Logical
INFO  21:51:02,088 - #17 operation
INFO  21:51:02,088 - #17 is
INFO  21:51:02,088 - #20 true
INFO  21:51:02,088 - #42 )
INFO  21:51:02,088 - #37 ;
INFO  21:51:02,088 - #46 }
INFO  21:51:02,088 - #17 Loop
INFO  21:51:02,088 - #17 and
INFO  21:51:02,088 - #2 break
INFO  21:51:02,088 - #24 /
INFO  21:51:02,088 - #13 continue
INFO  21:51:02,088 - #14 for
INFO  21:51:02,088 - #41 (
INFO  21:51:02,088 - #17 int
INFO  21:51:02,088 - #34 =
INFO  21:51:02,089 - #37 ;
INFO  21:51:02,089 - #30 <
INFO  21:51:02,089 - #18 10
INFO  21:51:02,089 - #37 ;
INFO  21:51:02,089 - #35 ++
INFO  21:51:02,089 - #42 )
INFO  21:51:02,090 - #45 {
INFO  21:51:02,090 - #6 if
INFO  21:51:02,090 - #41 (
INFO  21:51:02,090 - #26 ==
INFO  21:51:02,090 - #42 )
INFO  21:51:02,090 - #45 {
INFO  21:51:02,090 - #13 continue
INFO  21:51:02,090 - #37 ;
INFO  21:51:02,091 - #46 }
INFO  21:51:02,091 - #6 if
INFO  21:51:02,091 - #41 (
INFO  21:51:02,091 - #26 ==
INFO  21:51:02,091 - #42 )
INFO  21:51:02,091 - #45 {
INFO  21:51:02,091 - #2 break
INFO  21:51:02,091 - #37 ;
INFO  21:51:02,091 - #46 }
INFO  21:51:02,091 - #8 print
INFO  21:51:02,091 - #41 (
INFO  21:51:02,091 - #42 )
INFO  21:51:02,091 - #37 ;
INFO  21:51:02,091 - #46 }
INFO  21:51:02,091 - #17 Return
INFO  21:51:02,091 - #17 statement
INFO  21:51:02,091 - #10 return
INFO  21:51:02,091 - #37 ;
INFO  21:51:02,091 - #46 }
INFO  21:51:02,091 - #46 }
