INFO  14:19:34,578 - Compiling source file: C:\Users\Nikola\Documents\ETF_NIKOLA\IV\sedmi semestar\prevodioci\domaci leksicka analiza\workspace\MJCompiler\test\program.mj
INFO  14:19:34,635 - #2 program
INFO  14:19:34,635 - #43 test301
INFO  14:19:34,635 - #43 int
INFO  14:19:34,637 - #43 x
INFO  14:19:34,637 - #7 ,
INFO  14:19:34,638 - #43 y
INFO  14:19:34,638 - #6 ;
INFO  14:19:34,638 - #43 bool
INFO  14:19:34,639 - #43 z
INFO  14:19:34,639 - #6 ;
INFO  14:19:34,639 - #43 char
INFO  14:19:34,639 - #43 c
INFO  14:19:34,639 - #6 ;
INFO  14:19:34,639 - #43 int
INFO  14:19:34,639 - #43 arr
INFO  14:19:34,639 - #8 [
INFO  14:19:34,639 - #9 ]
INFO  14:19:34,639 - #6 ;
INFO  14:19:34,639 - #43 char
INFO  14:19:34,639 - #43 arr2
INFO  14:19:34,640 - #8 [
INFO  14:19:34,640 - #9 ]
INFO  14:19:34,640 - #6 ;
INFO  14:19:34,640 - #3 {
INFO  14:19:34,640 - #11 void
INFO  14:19:34,641 - #43 main
INFO  14:19:34,641 - #29 (
INFO  14:19:34,641 - #24 )
INFO  14:19:34,641 - #43 char
INFO  14:19:34,642 - #43 c
INFO  14:19:34,642 - #6 ;
INFO  14:19:34,642 - #3 {
INFO  14:19:34,643 - #37 read
INFO  14:19:34,643 - #29 (
INFO  14:19:34,643 - #43 arr2
INFO  14:19:34,643 - #24 )
INFO  14:19:34,644 - #6 ;
INFO  14:19:34,644 - #38 print
INFO  14:19:34,644 - #29 (
INFO  14:19:34,644 - #40 2
INFO  14:19:34,644 - #24 )
INFO  14:19:34,644 - #6 ;
INFO  14:19:34,644 - #4 }
INFO  14:19:34,644 - #4 }
INFO  14:19:34,650 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  DeclarationListVar(
    DeclarationListVar(
      DeclarationListVar(
        DeclarationListVar(
          DeclarationListVar(
            NoDeclarationList(
            ) [NoDeclarationList]
            VarDecl(
              VarDeclType(
                TypeName(
                 int
                ) [TypeName]
              ) [VarDeclType]
              MultipleVarDeclaration(
                VarDeclNextElem(
                 x
                ) [VarDeclNextElem]
                SingleVarDeclaration(
                  VarDeclFinalElem(
                   y
                  ) [VarDeclFinalElem]
                ) [SingleVarDeclaration]
              ) [MultipleVarDeclaration]
            ) [VarDecl]
          ) [DeclarationListVar]
          VarDecl(
            VarDeclType(
              TypeName(
               bool
              ) [TypeName]
            ) [VarDeclType]
            SingleVarDeclaration(
              VarDeclFinalElem(
               z
              ) [VarDeclFinalElem]
            ) [SingleVarDeclaration]
          ) [VarDecl]
        ) [DeclarationListVar]
        VarDecl(
          VarDeclType(
            TypeName(
             char
            ) [TypeName]
          ) [VarDeclType]
          SingleVarDeclaration(
            VarDeclFinalElem(
             c
            ) [VarDeclFinalElem]
          ) [SingleVarDeclaration]
        ) [VarDecl]
      ) [DeclarationListVar]
      VarDecl(
        VarDeclType(
          TypeName(
           int
          ) [TypeName]
        ) [VarDeclType]
        SingleVarDeclaration(
          VarDeclArrayFinal(
           arr
          ) [VarDeclArrayFinal]
        ) [SingleVarDeclaration]
      ) [VarDecl]
    ) [DeclarationListVar]
    VarDecl(
      VarDeclType(
        TypeName(
         char
        ) [TypeName]
      ) [VarDeclType]
      SingleVarDeclaration(
        VarDeclArrayFinal(
         arr2
        ) [VarDeclArrayFinal]
      ) [SingleVarDeclaration]
    ) [VarDecl]
  ) [DeclarationListVar]
  MethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDecl(
      MethodReturnTypeVoid(
       main
      ) [MethodReturnTypeVoid]
      NoFormalParams(
      ) [NoFormalParams]
      VarDeclarationList(
        NoVarDeclarationList(
        ) [NoVarDeclarationList]
        VarDecl(
          VarDeclType(
            TypeName(
             char
            ) [TypeName]
          ) [VarDeclType]
          SingleVarDeclaration(
            VarDeclFinalElem(
             c
            ) [VarDeclFinalElem]
          ) [SingleVarDeclaration]
        ) [VarDecl]
      ) [VarDeclarationList]
      StatementListExist(
        StatementListExist(
          StatementListDoesntExist(
          ) [StatementListDoesntExist]
          StatementRead(
            DesignatorIdent(
             arr2
            ) [DesignatorIdent]
          ) [StatementRead]
        ) [StatementListExist]
        StatementPrintExpr(
          ExprTerm(
            TermFactor(
              FactorNumber(
               2
              ) [FactorNumber]
            ) [TermFactor]
          ) [ExprTerm]
        ) [StatementPrintExpr]
      ) [StatementListExist]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  14:19:34,650 - ===================================
INFO  14:19:34,653 - Promenljiva x deklarisana  na liniji 4
INFO  14:19:34,653 - Promenljiva y deklarisana  na liniji 4
INFO  14:19:34,653 - Promenljiva z deklarisana  na liniji 5
INFO  14:19:34,653 - Promenljiva c deklarisana  na liniji 6
INFO  14:19:34,653 - Promenljiva arr deklarisana  na liniji 7
INFO  14:19:34,653 - Promenljiva arr2 deklarisana  na liniji 8
INFO  14:19:34,653 - Promenljiva c deklarisana  na liniji 11
ERROR 14:19:34,654 - Greska: Vrednost u koju se ucitava vrednost mora biti tipa int, bool ili char na liniji 12
INFO  14:19:34,654 - ===================================
ERROR 14:19:34,654 - Parsiranje NIJE uspesno zavrseno!
